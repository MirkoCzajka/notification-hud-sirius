name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, zip, bcmath, pcntl, gd, pdo_sqlite
          coverage: none

      - name: Cache composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}

      - name: Install deps
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Prepare .env.testing
        run: |
          [ -f .env.testing ] || cp .env.example .env.testing
          # clave para APP_KEY (si tu app la requiere para tests)
          php -r "echo 'APP_KEY=base64:'.base64_encode(random_bytes(32)).PHP_EOL;" >> .env.testing

      - name: PHPUnit (sqlite memory)
        env:
          APP_ENV: testing
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
          LOG_CHANNEL: stderr
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          JWT_SECRET: testsecret123
        run: ./vendor/bin/phpunit --colors=always

  build:
    name: Build container image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Docker build (sanity)
        run: docker build -t myapp:test .
        # Si querés, también podrías correr un "docker run --rm myapp:test php -v" como smoke test

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger Render Deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -fsSL -X POST \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": true}' \
            https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys
